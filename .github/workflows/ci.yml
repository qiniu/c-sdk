name: C SDK CI
on:
  push:
  pull_request:
jobs:
  linux:
    name: CI Test On Linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v1.12
        with:
          cmake-version: '3.13.0'
      - name: Install dependencies
        run: |
          sudo apt install -yqq libcurl4 libcurl4-openssl-dev build-essential
      - name: Build
        run: |
          set -e
          cmake -S . -B build
          cmake --build build
      - name: Unit test
        working-directory: '${{ github.workspace }}/build/gtests'
        run: |
          ./qiniu_test --gtest_filter="UnitTest.*"
  macos:
    name: CI Test On macOS
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          brew install curl cmake make
      - name: Build
        run: |
          set -e
          cmake -DOPENSSL_ROOT_DIR="$(brew --prefix)/opt/openssl/" -S . -B build
          cmake --build build
      - name: Unit test
        working-directory: '${{ github.workspace }}/build/gtests'
        run: |
          ./qiniu_test --gtest_filter="UnitTest.*"
  windows:
    name: CI Test On Windows
    runs-on: windows-latest
    env:
      buildDir: '${{ github.workspace }}/build/'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Visual Studio Dev cmds
        uses: ilammy/msvc-dev-cmd@v1
      - name: Install CMake
        uses: lukka/get-cmake@latest
      - name: Install vcpkg
        uses: lukka/run-vcpkg@v10.1
        with:
          vcpkgDirectory: '${{ github.workspace }}/vcpkg'
          vcpkgGitCommitId: 'acc3bcf76b84ae5041c86ab55fe138ae7b8255c7'
          vcpkgJsonGlob: 'vcpkg.json'
      - name: Cmake
        uses: lukka/run-cmake@v3
        with:
          cmakeListsOrSettingsJson: CMakeListsTxtBasic
          cmakeListsTxtPath: '${{ github.workspace }}\CMakeLists.txt'
          useVcpkgToolchainFile: true
          buildDirectory: ${{ env.buildDir }}
      - name: Unit Test
        run: |
          ./gtests/qiniu_test.exe --gtest_filter="UnitTest.*"
        shell: bash
        working-directory: ${{ env.buildDir }}
